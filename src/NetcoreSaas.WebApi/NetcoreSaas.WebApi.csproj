<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <Authors>AlexandroMtzG</Authors>
    <Company>SaasFrontends</Company>
    <Description>Vue2, Vue3, React and Svelte frontend + .NET backend</Description>
    <Copyright>MIT 2021 SaasFrontends</Copyright>
    <AssemblyName>NetcoreSaas.WebApi</AssemblyName>
    <RootNamespace>NetcoreSaas.WebApi</RootNamespace>
    <Version>2.4.0</Version>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
    <FileVersion>2.4.0.0</FileVersion>
    <NoWarn>$(NoWarn);NU1701</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="6.0.0" />
    <PackageReference Include="FastMember" Version="1.5.0" />
    <PackageReference Include="graphiql" Version="2.0.0" />
    <PackageReference Include="GraphQL" Version="2.4.0" />
    <PackageReference Include="LocalStorage" Version="2.0.0" />
    <PackageReference Include="Microsoft.AspNet.WebHooks.Receivers.Generic" Version="1.2.2" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.6" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.4" />
    <PackageReference Include="Microsoft.AspNetCore.StaticFiles" Version="2.2.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="5.5.0" />
    <PackageReference Include="Serilog.AspNetCore" Version="3.2.0" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="3.0.1" />
    <PackageReference Include="VueCliMiddleware" Version="3.1.1" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Files/Uploads/*">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="Files/*">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="Emails/*">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="ClientApp\node_modules\**" />
    <Compile Remove="Client\**" />
    <Compile Remove="Service\Repository\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="Client\**" />
    <Content Remove="Service\Repository\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Remove="ClientApp\node_modules\**" />
    <EmbeddedResource Remove="Client\**" />
    <EmbeddedResource Remove="Service\Repository\**" />
    <None Remove="ClientApp\node_modules\**" />
    <None Remove="Client\**" />
    <None Remove="Service\Repository\**" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\NetcoreSaas.Application\NetcoreSaas.Application.csproj" />
    <ProjectReference Include="..\NetcoreSaas.Infrastructure\NetcoreSaas.Infrastructure.csproj" />
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
<!--    <Exec Command="dotnet ef database update &#45;&#45;context MasterDbContext" />-->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
  </Target>
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>